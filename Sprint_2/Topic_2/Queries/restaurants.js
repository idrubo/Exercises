db = connect ('mongodb://localhost/restaurants');
console.clear ();
console.log ("\n01 --");
console.log (db.restaurants.find ());
console.log ("\n02 --");
console.log (db.restaurants.find ( {}, { restaurant_id: true, name: true, borough: true, cuisine: true }));
console.log ("\n03 --");
console.log (db.restaurants.find ( {}, {_id:0, restaurant_id: true, name: true, borough: true, cuisine: true }));
console.log ("\n04 --");
console.log (db.restaurants.find ( {}, {_id:0, restaurant_id: true, name: true, borough: true, 'address.zipcode': true }));
console.log ("\n05 --");
db.restaurants.createIndex ({borough: 1});
console.log (db.restaurants.find ({borough: 'Bronx'}));
console.log ("\n06 --");
console.log (db.restaurants.find ({borough: 'Bronx'}).limit (5));
console.log ("\n07 --");
console.log (db.restaurants.find ({borough: 'Bronx'}).skip (5).limit (5));
db.restaurants.dropIndex ('borough_1');
console.log ("\n08 --");
db.restaurants.createIndex ({'grades.score': 1})
console.log (db.restaurants.find ({'grades.score': {$gt: 90}}));
console.log ("\n09 --");
console.log (db.restaurants.find ({'grades': {$elemMatch: {score: {$gt: 80, $lt: 100}}}}));
db.restaurants.dropIndex ('grades.score_1');
console.log ("\n10 --");
db.restaurants.createIndex ({"address.coord.0": 1});
console.log (db.restaurants.find({'address.coord.0': {$lt: -95.754168}}));
db.restaurants.dropIndex ('address.coord.0_1');
console.log ("\n11 --");
db.restaurants.createIndex ({"cuisine": 1, "grades.score": 1});
console.log (db.restaurants.find ({$and: [ {"cuisine": {$ne: "American "}}, {"grades.score": {$gt: 70}}, {"address.coord.0": {$lt: -65.754168}} ]}));
console.log ("\n12 --");
console.log (db.restaurants.aggregate ([ {$match: {"grades.score": {$gt:70}}}, {$match: {cuisine: {$ne: "American "}}}, {$match: {"address.coord.0": {$lt: -65.754168}}}]));
db.restaurants.dropIndex ('cuisine_1_grades.score_1');
console.log ("\n13 --");
db.restaurants.createIndex ({"cuisine": 1, "borough": 1});
console.log (db.restaurants.find({ $and: [ {"cuisine": {$ne: "American "}}, {"grades.grade": 'A'}, {borough: {$ne: 'Brooklyn'}}]}).sort ({cuisine :+1}));
db.restaurants.dropIndex ('cuisine_1_borough_1');
console.log ("\n14 --");
db.restaurants.createIndex ({"name": 1});
console.log (db.restaurants.find ({ name: {$regex: "^Wil"}}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
console.log ("\n15 --");
console.log (db.restaurants.find ({ name: {$regex: "ces$"}}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
console.log ("\n16 --");
console.log (db.restaurants.find ({name: /^.*Reg.*$/}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
db.restaurants.dropIndex ("name_1");
console.log ("\n17 --");
db.restaurants.createIndex ({"borough": 1, "cuisine": 1});
console.log (db.restaurants.find ({$and: [ {borough: "Bronx"}, {$or: [ {cuisine: 'American '}, {cuisine: 'Chinese'}]}]}));
db.restaurants.dropIndex ("borough_1_cuisine_1");
console.log ("\n18 --");
db.restaurants.createIndex ({"borough": 1});
console.log (db.restaurants.find ({$or: [ {borough: "Staten Island"}, {borough: "Queens"}, {borough: "Bronx"}, {borough: "Brooklyn"}]}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
console.log ("\n19 --");
console.log (db.restaurants.find ({$and: [ {borough: {$ne: "Staten Island"}}, {borough: {$ne: "Queens"}}, {borough: {$ne: "Bronx"}}, {borough: {$ne: "Brooklyn"}}]}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
db.restaurants.dropIndex ("borough_1");
console.log ("\n20 --");
db.restaurants.createIndex ({'grades.score': 1})
console.log (db.restaurants.find ({'grades.score': {$lt: 10}}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
db.restaurants.dropIndex ('grades.score_1');
console.log ("\n21 --");
db.restaurants.createIndex ({"cuisine": 1, "name": 1});
console.log (db.restaurants.find ( {$and: [ {cuisine: 'Seafood'}, {$nor: [ {name: /^Wil.*$/}]}]}, { _id: false, restaurant_id: true, name: true, borough: true, cuisine: true }));
db.restaurants.dropIndex ("cuisine_1_name_1");
console.log ("\n22 --");
db.restaurants.createIndex ({"grades.date": 1});
console.log (db.restaurants.find ({grades: { $all: [ {$elemMatch: { date: ISODate('2014-08-11T00:00:00.000Z'), grade: 'A', score: 11}}]}}, { _id: false, restaurant_id: true, name: true, grades: true }));
db.restaurants.dropIndex ("grades.date_1");
console.log ("\n23 --");
db.restaurants.createIndex ({'grades.1.date': 1});
console.log (db.restaurants.find ({$and: [ {'grades.1.grade': 'A'}, {'grades.1.score': 9}, {'grades.1.date': ISODate('2014-08-11T00:00:00Z')}]}, { _id: false, restaurant_id: true, name: true, grades: true }));
db.restaurants.dropIndex ('grades.1.date_1');
console.log ("\n24 --");
db.restaurants.createIndex ({'address.coord.1': 1});
console.log (db.restaurants.find ({$and: [ {'address.coord.1': {$gt: 42}}, {'address.coord.1': {$lt: 52}}]}, { _id: false, restaurant_id: true, name: true, address: true }));
db.restaurants.dropIndex ('address.coord.1_1');
console.log ("\n25 --");
console.log (db.restaurants.find ().sort ({name: +1}));
console.log ("\n26 -- ");
console.log (db.restaurants.find ().sort ({name: -1}));
console.log ("\n27 -- ");
console.log (db.restaurants.find ().sort ({cuisine: +1, borough: -1}));
console.log ("\n28 -- ");
db.restaurants.createIndex ({'address.street': 1});
console.log (db.restaurants.find ({'address.street': {$eq: ''}}));
db.restaurants.dropIndex ('address.street_1');
console.log ("\n29 -- ");
console.log (db.restaurants.find ({$and: [ {'address.coord.0': {$type: 'double'}}, {'address.coord.1': {$type: 'double'}}]}));
console.log ("\n30 -- ");
console.log (db.restaurants.find ({'grades.score': {$mod: [7, 0]}}, { _id: false, restaurant_id: true, name: true, 'grades.grade': true}));
console.log ("\n31 -- ");
db.restaurants.createIndex ({'name': 1});
console.log (db.restaurants.find ({name: /^.*mon.*$/}, { _id: false, name: true, borough: true, 'address.coord': true, cuisine: true }));
console.log ("\n32 -- ");
console.log (db.restaurants.find ({name: /^Mad.*$/}, { _id: false, name: true, borough: true, 'address.coord': true, cuisine: true }));
db.restaurants.dropIndex ('name_1');

